language: java
jdk:
  - openjdk8

# Travis CI를 어느 브랜치가 푸시될 때 수행할 지 지정. master 브랜치에 push 될 때만 수행하도록 설정.
branches:
  only:
    - master

# Travis CI 서버의 Home 설정. 그레이들 의존성 받게 되면 해당 디렉토리에 캐싱하여 같은 의존성은 다음 배포때부터 다시 받지 않도록 설정.
cache:
  directories:
    - '$HOME/.m2/repository'
    - '$HOME/.gradle'

# master 브랜치에 푸시 일어났을 때 수행하는 명령어. gradlew 를 통해 clean & build 하도록 설정.
script: "./gradlew clean build"

# /home/travis/.travis/functions: line 351: ./gradlew: Permission denied 에러 발생하여 실행권한 추가
before_install:
  - chmod +x gradlew

# deploy 명령어 실행되기 전 수행하게 하는 명령어
before_deploy:  # CodeDeploy 는 Jar 파일 인식 못하기에 Jar+기타설정 파일들을 모아 zip으로 압축
  - zip -r springboot2-webservice *   # 현재 모든 파일을 프로젝트명으로 압축
  - mkdir -p deploy     # deploy 폴더 Travis CI가 실행중인 위치에서 생성
  - mv springboot2-webservice.zip deploy/springboot2-webservice.zip # 압축파일을 deploy/아래로 이동

# deploy 설정
deploy:
  - provider: s3  # S3로 파일 업로드 or CodeDeploy로 배포 등 외부 서비스와 연동될 행위를 선언
    access_key_id: $AWS_ACCESS_KEY  # Travis repo settings 에 설정된 값
    secret_access_key: $AWS_SECRET_KEY  # Travis repo settings 에 설정된 값
    bucket: freelect-springboot-ex-build  # S3 버킷 이름
    region: ap-northeast-2
    skip_cleanup: true
    acl: private  # zip 파일 접근을 private 으로 설정
    local_dir: deploy # before_deploy 에서 생성한 디렉토리. 해당 위치의 파일들만 S3으로 전송
    wait-untile-deployed: true

  - provider: codedeploy  # CodeDeploy 설정
    access_key_id: $AWS_ACCESS_KEY
    secret_access_key: $AWS_SECRET_KEY
    bucket: freelect-springboot-ex-build
    key: springboot2-webservice.zip # 빌드파일을 압축해서 전달 함
    build_type: zip
    application: springboot2-webservice # CodeDeploy 애플리케이션명
    deployment_group: springboot2-webservice-group  # CodeDeploy 배포 그룹
    region: ap-northeast-2
    wait-until-deployed: true

# CI 실행 완료 시 메일로 알람.
notifications:
  email:
    recipients:
      - 'cacaotomato@gmail.com'